$version Generated by VerilatedVcd $end
$timescale 1ps $end
 $scope module TOP $end
  $var wire 1 < clk $end
  $var wire 1 = reset $end
  $var wire 16 > d_out [15:0] $end
  $var wire 3 ? Rx_val [2:0] $end
  $var wire 3 @ Ry_val [2:0] $end
  $var wire 3 A sel_val [2:0] $end
  $var wire 16 B x_val [15:0] $end
  $var wire 16 C operand_val [15:0] $end
  $var wire 16 D instruction_val [15:0] $end
  $var wire 1 E run_val $end
  $var wire 1 F done $end
  $scope module top_module $end
   $var wire 1 < clk $end
   $var wire 1 = reset $end
   $var wire 16 > d_out [15:0] $end
   $var wire 3 ? Rx_val [2:0] $end
   $var wire 3 @ Ry_val [2:0] $end
   $var wire 3 A sel_val [2:0] $end
   $var wire 16 B x_val [15:0] $end
   $var wire 16 C operand_val [15:0] $end
   $var wire 16 D instruction_val [15:0] $end
   $var wire 1 E run_val $end
   $var wire 1 F done $end
   $var wire 16 4 instruction [15:0] $end
   $var wire 16 G last_alu_result [15:0] $end
   $var wire 16 H last_alu [15:0] $end
   $var wire 1 I en_pc $end
   $var wire 1 M en_new_pc $end
   $var wire 1 5 branch $end
   $var wire 1 J branch_res $end
   $var wire 12 K new_pc [11:0] $end
   $scope module branch_logic $end
    $var wire 16 4 instruction [15:0] $end
    $var wire 1 < clk $end
    $var wire 16 G last_alu_result [15:0] $end
    $var wire 12 K new_pc [11:0] $end
    $var wire 1 J branch_res $end
    $var wire 1 5 branch $end
   $upscope $end
   $scope module core $end
    $var wire 16 4 instruction [15:0] $end
    $var wire 1 < clk $end
    $var wire 1 5 run $end
    $var wire 1 = reset $end
    $var wire 1 J branch_res $end
    $var wire 16 H d_out [15:0] $end
    $var wire 3 ? Rx_val [2:0] $end
    $var wire 3 @ Ry_val [2:0] $end
    $var wire 3 A sel_val [2:0] $end
    $var wire 16 B x_val [15:0] $end
    $var wire 16 C operand_val [15:0] $end
    $var wire 1 I done $end
    $var wire 16 4 reg_i [15:0] $end
    $var wire 16 $ reg_c [15:0] $end
    $var wire 16 % reg_s [15:0] $end
    $var wire 16 & registers[0] [15:0] $end
    $var wire 16 ' registers[1] [15:0] $end
    $var wire 16 ( registers[2] [15:0] $end
    $var wire 16 ) registers[3] [15:0] $end
    $var wire 16 * registers[4] [15:0] $end
    $var wire 16 + registers[5] [15:0] $end
    $var wire 16 , registers[6] [15:0] $end
    $var wire 16 - registers[7] [15:0] $end
    $var wire 1 . en_c $end
    $var wire 1 / en_s $end
    $var wire 32 0 cpp_result [31:0] $end
    $var wire 3 6 Rx [2:0] $end
    $var wire 3 7 Ry [2:0] $end
    $var wire 3 8 sel [2:0] $end
    $var wire 8 L en_reg [7:0] $end
    $var wire 16 H result [15:0] $end
    $var wire 16 1 operand [15:0] $end
    $var wire 2 9 format [1:0] $end
    $var wire 32 # i [31:0] $end
    $scope module alu $end
     $var wire 1 < clk $end
     $var wire 16 % in_a [15:0] $end
     $var wire 16 1 in_b [15:0] $end
     $var wire 3 8 select [2:0] $end
     $var wire 1 5 run $end
     $var wire 16 H alu_out [15:0] $end
     $var wire 32 N add [31:0] $end
     $var wire 32 O sub [31:0] $end
     $var wire 32 P and_op [31:0] $end
     $var wire 32 Q or_op [31:0] $end
     $var wire 32 R xor_op [31:0] $end
     $var wire 32 S shl [31:0] $end
     $var wire 32 T shr [31:0] $end
     $var wire 32 U cmp [31:0] $end
    $upscope $end
    $scope module control $end
     $var wire 16 4 instruction [15:0] $end
     $var wire 1 5 run $end
     $var wire 1 < clk $end
     $var wire 1 = reset $end
     $var wire 1 / en_s $end
     $var wire 1 . en_c $end
     $var wire 8 L en_reg [7:0] $end
     $var wire 1 I done $end
     $var wire 2 2 state [1:0] $end
     $var wire 2 3 next_state [1:0] $end
     $var wire 3 : Rx [2:0] $end
    $upscope $end
   $upscope $end
   $scope module fetch $end
    $var wire 1 < clk $end
    $var wire 1 = reset $end
    $var wire 1 I en_pc $end
    $var wire 12 K new_pc [11:0] $end
    $var wire 1 J en_new_pc $end
    $var wire 16 4 instruction [15:0] $end
    $var wire 12 ; pc [11:0] $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
b00000000000000000000000000001000 #
b0000000000000000 $
b0000000000000000 %
b0000000000000000 &
b0000000000000000 '
b0000000000000000 (
b0000000000000000 )
b0000000000000000 *
b0000000000000000 +
b0000000000000000 ,
b0000000000000000 -
0.
1/
b00000000000000000000000000000000 0
b0000000000000000 1
b00 2
b01 3
b0000000000000000 4
05
b000 6
b000 7
b000 8
b00 9
b000 :
b000000000000 ;
1<
0=
b0000000000000000 >
b000 ?
b000 @
b000 A
b0000000000000000 B
b0000000000000000 C
b0000000000000000 D
1E
0F
b0000000000000000 G
b0000000000000000 H
0I
0J
b000000000000 K
b00000000 L
0M
b00000000000000000000000000000000 N
b00000000000000000000000000000001 O
b00000000000000000000000000000010 P
b00000000000000000000000000000011 Q
b00000000000000000000000000000100 R
b00000000000000000000000000000101 S
b00000000000000000000000000000110 T
b00000000000000000000000000000111 U
#1
0<
#2
b0010111101000011 4
b001 6
b011 7
b11 9
b001 :
b000000000001 ;
1<
b001 ?
b011 @
b0010111101000011 D
#3
0<
#4
b0100000110100111 4
b010 6
b000 7
b001 8
b010 :
b000000000010 ;
1<
b010 ?
b000 @
b001 A
b0100000110100111 D
#5
0<
#6
b0011101011110001 4
b001 6
b110 7
b100 8
b01 9
b001 :
b000000000011 ;
1<
b001 ?
b110 @
b100 A
b0011101011110001 D
#7
0<
#8
b1010110011011001 4
b101 6
b011 7
b110 8
b101 :
b000000000100 ;
1<
b101 ?
b011 @
b110 A
b1010110011011001 D
#9
0<
#10
b0010101100010001 4
b001 6
b010 7
b100 8
b001 :
b000000000101 ;
1<
b001 ?
b010 @
b100 A
b0010101100010001 D
#11
0<
#12
b000000000110 ;
1<
#13
0<
#14
b1101101011001000 4
b110 6
b110 7
b010 8
b00 9
b110 :
b000000000111 ;
1<
b110 ?
b110 @
b010 A
b1101101011001000 D
#15
0<
#16
b1000111011011000 4
b100 6
b011 7
b110 8
b100 :
b000000001000 ;
1<
b100 ?
b011 @
b110 A
b1000111011011000 D
#17
0<
#18
b0000100111111110 4
15
b000 6
b010 7
b111 8
b10 9
b000 :
b000000001001 ;
1<
b000 ?
b010 @
b111 A
b0000100111111110 D
0E
#19
0<
#20
1.
0/
b01 2
b10 3
1<
#21
0<
#22
0.
b10 2
b00 3
1<
1F
1I
b00000001 L
#23
0<
#24
1/
b00 2
b01 3
b0000010001001101 4
05
b001 7
b011 8
b01 9
b000000001010 ;
1<
b001 @
b011 A
b0000010001001101 D
1E
0F
0I
b00000000 L
#25
0<
#26
b1001100010011000 4
b100 6
b110 7
b110 8
b00 9
b100 :
b000000001011 ;
1<
b100 ?
b110 @
b110 A
b1001100010011000 D
#27
0<
#28
b0011110001010101 4
b001 6
b111 7
b101 8
b01 9
b001 :
b000000001100 ;
1<
b001 ?
b111 @
b101 A
b0011110001010101 D
#29
0<
#30
b0001001010001100 4
b000 6
b100 7
b011 8
b00 9
b000 :
b000000001101 ;
1<
b000 ?
b100 @
b011 A
b0001001010001100 D
#31
0<
#32
b1101101111100010 4
15
b110 6
b110 7
b000 8
b10 9
b110 :
b000000001110 ;
1<
b110 ?
b110 @
b000 A
b1101101111100010 D
0E
1J
b110110111110 K
#33
0<
#34
1.
0/
b01 2
b10 3
b0101111000000101 4
05
b010 6
b111 7
b001 8
b01 9
b010 :
b110110111110 ;
1<
b010 ?
b111 @
b001 A
b0101111000000101 D
1E
0J
b000000000000 K
#35
0<
#36
0.
1/
b00 2
b01 3
b110110111111 ;
1<
#37
0<
#38
b1100101100111111 4
b110 6
b010 7
b111 8
b11 9
b110 :
b110111000000 ;
1<
b110 ?
b010 @
b111 A
b1100101100111111 D
#39
0<
#40
b1100101001100101 4
b001 8
b01 9
b110111000001 ;
1<
b001 A
b1100101001100101 D
#41
0<
#42
b1110001000011100 4
b111 6
b000 7
b111 8
b00 9
b111 :
b110111000010 ;
1<
b111 ?
b000 @
b111 A
b1110001000011100 D
#43
0<
#44
b1101001011011001 4
b110 6
b100 7
b110 8
b01 9
b110 :
b110111000011 ;
1<
b110 ?
b100 @
b110 A
b1101001011011001 D
#45
0<
#46
b1010110001010010 4
15
b101 6
b011 7
b100 8
b10 9
b101 :
b110111000100 ;
1<
b101 ?
b011 @
b100 A
b1010110001010010 D
0E
1J
b101011000101 K
#47
0<
#48
1.
0/
b01 2
b10 3
b1010010010110001 4
05
b001 7
b01 9
b101011000101 ;
1<
b001 @
b1010010010110001 D
1E
0J
b000000000000 K
#49
0<
#50
0.
1/
b00 2
b01 3
b101011000110 ;
1<
#51
0<
#52
b0110111110110100 4
b011 6
b011 7
b101 8
b00 9
b011 :
b101011000111 ;
1<
b011 ?
b011 @
b101 A
b0110111110110100 D
#53
0<
#54
b1011010001000001 4
b101 6
b101 7
b000 8
b01 9
b101 :
b101011001000 ;
1<
b101 ?
b101 @
b000 A
b1011010001000001 D
#55
0<
#56
b0010010011001101 4
b001 6
b001 7
b011 8
b001 :
b101011001001 ;
1<
b001 ?
b001 @
b011 A
b0010010011001101 D
#57
0<
#58
b0001101011000010 4
15
b000 6
b110 7
b000 8
b10 9
b000 :
b101011001010 ;
1<
b000 ?
b110 @
b000 A
b0001101011000010 D
0E
1J
b000110101100 K
#59
0<
#60
1.
0/
b01 2
b10 3
b1010010101110100 4
05
b101 6
b001 7
b101 8
b00 9
b101 :
b000110101100 ;
1<
b101 ?
b001 @
b101 A
b1010010101110100 D
1E
0J
b000000000000 K
#61
0<
#62
0.
1/
b00 2
b01 3
b000110101101 ;
1<
#63
0<
#64
b1001000001010111 4
b100 6
b100 7
b11 9
b100 :
b000110101110 ;
1<
b100 ?
b100 @
b1001000001010111 D
#65
0<
#66
b0110010110101111 4
b011 6
b001 7
b011 8
b011 :
b000110101111 ;
1<
b011 ?
b001 @
b011 A
b0110010110101111 D
#67
0<
#68
b1111000011100001 4
b111 6
b100 7
b000 8
b01 9
b111 :
b000110110000 ;
1<
b111 ?
b100 @
b000 A
b1111000011100001 D
#69
0<
#70
b0101100110000101 4
b010 6
b110 7
b001 8
b010 :
b000110110001 ;
1<
b010 ?
b110 @
b001 A
b0101100110000101 D
#71
0<
#72
b0010111010001000 4
b001 6
b011 7
b010 8
b00 9
b001 :
b000110110010 ;
1<
b001 ?
b011 @
b010 A
b0010111010001000 D
#73
0<
#74
b0010001110000010 4
15
b000 7
b000 8
b10 9
b000110110011 ;
1<
b000 @
b000 A
b0010001110000010 D
0E
1J
b001000111000 K
#75
0<
#76
1.
0/
b01 2
b10 3
b1110011110111111 4
05
b111 6
b001 7
b111 8
b11 9
b111 :
b001000111000 ;
1<
b111 ?
b001 @
b111 A
b1110011110111111 D
1E
0J
b000000000000 K
#77
0<
#78
0.
1/
b00 2
b01 3
b001000111001 ;
1<
#79
0<
#80
b1101100010000001 4
b110 6
b110 7
b000 8
b01 9
b110 :
b001000111010 ;
1<
b110 ?
b110 @
b000 A
b1101100010000001 D
#81
0<
#82
b0011010111011010 4
15
b001 6
b101 7
b110 8
b10 9
b001 :
b001000111011 ;
1<
b001 ?
b101 @
b110 A
b0011010111011010 D
0E
#83
0<
#84
1.
0/
b01 2
b10 3
1<
#85
0<
#86
0.
b10 2
b00 3
1<
1F
1I
b00000010 L
#87
0<
#88
1/
b00 2
b01 3
b1000101100110110 4
b100 6
b010 7
b101 8
b100 :
b001000111100 ;
1<
b100 ?
b010 @
b101 A
b1000101100110110 D
0F
0I
b00000000 L
#89
0<
#90
1.
0/
b01 2
b10 3
1<
#91
0<
#92
0.
b10 2
b00 3
1<
1F
1I
b00010000 L
#93
0<
#94
1/
b00 2
b01 3
b1011010011110001 4
05
b101 6
b101 7
b100 8
b01 9
b101 :
b001000111101 ;
1<
b101 ?
b101 @
b100 A
b1011010011110001 D
1E
0F
0I
b00000000 L
#95
0<
#96
b0100101110000110 4
15
b010 6
b010 7
b001 8
b10 9
b010 :
b001000111110 ;
1<
b010 ?
b010 @
b001 A
b0100101110000110 D
0E
#97
0<
#98
1.
0/
b01 2
b10 3
1<
#99
0<
#100
0.
b10 2
b00 3
1<
1F
1I
b00000100 L
#101
0<
