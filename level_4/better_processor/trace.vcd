$version Generated by VerilatedVcd $end
$timescale 1ps $end
 $scope module TOP $end
  $var wire 16 # in_a [15:0] $end
  $var wire 16 $ in_b [15:0] $end
  $var wire 3 % select [2:0] $end
  $var wire 16 & alu_out [15:0] $end
  $scope module ALU $end
   $var wire 16 # in_a [15:0] $end
   $var wire 16 $ in_b [15:0] $end
   $var wire 3 % select [2:0] $end
   $var wire 16 & alu_out [15:0] $end
   $var wire 32 ' add [31:0] $end
   $var wire 32 ( sub [31:0] $end
   $var wire 32 ) and_op [31:0] $end
   $var wire 32 * or_op [31:0] $end
   $var wire 32 + xor_op [31:0] $end
   $var wire 32 , shl [31:0] $end
   $var wire 32 - shr [31:0] $end
   $var wire 32 . cmp [31:0] $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
b0000000000000000 #
b0000000000000000 $
b000 %
b0000000000000000 &
b00000000000000000000000000000000 '
b00000000000000000000000000000001 (
b00000000000000000000000000000010 )
b00000000000000000000000000000011 *
b00000000000000000000000000000100 +
b00000000000000000000000000000101 ,
b00000000000000000000000000000110 -
b00000000000000000000000000000111 .
#1
b0000000000000001 #
b0000000000000001 $
b001 %
#2
b0000000000000010 #
b0000000000000010 $
b010 %
b0000000000000010 &
#3
b0000000000000011 #
b0000000000000011 $
b011 %
b0000000000000011 &
#4
b0000000000000100 #
b0000000000000100 $
b100 %
b0000000000000000 &
#5
b0000000000000101 #
b0000000000000101 $
b101 %
b0000000010100000 &
#6
b0000000000000110 #
b0000000000000110 $
b110 %
b0000000000000000 &
#7
b0000000000000111 #
b0000000000000111 $
b111 %
